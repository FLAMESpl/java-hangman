package pl.wikihangman.views.swing;

import java.awt.BorderLayout;
import pl.wikihangman.models.User;
import pl.wikihangman.services.AccountsService;
import pl.wikihangman.services.GameService;
import pl.wikihangman.views.logging.ErrorsEnum;
import pl.wikihangman.views.swing.events.*;
import pl.wikihangman.views.swing.helpers.OptionPaneHelpers;

/**
 *
 * @author ≈Åukasz Szafirski
 * @version 1.0.0.0
 */
public class HomeFrame extends javax.swing.JFrame 
                       implements LogInAttemptListener {

    private String wikipediaBaseUrl = null;
    private final String DB_PATH = ".\\db.txt";
    private User activeUser = null;
    private LogInStatusEnum logInStatus = LogInStatusEnum.LOGGED_OUT;
    
    /**
     * Creates new form HomeFrame
     */
    public HomeFrame() {
        initComponents();
        init();
    }
    
    /**
     * Non-designer initialization part of component.
     */
    private void init() {
        setLogInPanel();
    }
    
    /**
     * Executed when {@code LogInAttemptEvent} is raised.
     * 
     * @param event data associated with event state
     */
    @Override
    public void attemptedToLogIn(LogInAttemptEvent event) {
        activeUser = event.getLoggedUser();
        if (event.getSuccess()) {
            setLogInStatus(LogInStatusEnum.LOGGED_IN);
        }
    }
    
    /**
     * Adjusts form's components state to given {@code LogInStatusEnum}
     * 
     * @param logInStatusEnum status of logged user
     */
    private void setLogInStatus(LogInStatusEnum logInStatusEnum) {
        logInStatus = logInStatusEnum;
        switch (logInStatusEnum) {
            case LOGGED_IN:
                logInlogOutMenuItem.setText("Log out");
                break;
                
            case LOGGED_OUT:
                logInlogOutMenuItem.setText("Log in");
                break;
        }
    }
    
    /**
     * Sets log in panel as main panel in this frame.
     */
    private void setLogInPanel() {
        LoginPanel panel = new LoginPanel().setAccountsService(new AccountsService(DB_PATH));
        panel.addLogInAttemptListener(this);
        setMainPanel(panel);
    }
    
    /**
     * Activates given panel in this frame. Only one panel can be active at time.
     * 
     * @param panel panel to activate
     */
    private void setMainPanel(AppPanel panel) {
        mainPanel.addContainerListener(panel);
        mainPanel.removeAll();
        mainPanel.revalidate();
        mainPanel.repaint();
        mainPanel.setLayout(new BorderLayout());
        mainPanel.add(panel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        mainPanel = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        gameMenuItem = new javax.swing.JMenuItem();
        logInlogOutMenuItem = new javax.swing.JMenuItem();
        scoreboardMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        propertiesMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jToolBar1.setRollover(true);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        gameMenu.setMnemonic('f');
        gameMenu.setText("Game");

        gameMenuItem.setText("New");
        gameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(gameMenuItem);

        logInlogOutMenuItem.setText("Log in");
        logInlogOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInlogOutMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(logInlogOutMenuItem);

        scoreboardMenuItem.setText("Score board");
        scoreboardMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreboardMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(scoreboardMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        gameMenu.add(exitMenuItem);

        menuBar.add(gameMenu);

        propertiesMenu.setText("Properties");
        menuBar.add(propertiesMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void scoreboardMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreboardMenuItemActionPerformed
        ScoreBoardPanel panel = new ScoreBoardPanel()
                .setAccountService(new AccountsService(DB_PATH))
                .displayScoreBoard();
        
        if (activeUser != null) {
            panel.showWithActiveUser(activeUser);
        }
        
        setMainPanel(panel);
    }//GEN-LAST:event_scoreboardMenuItemActionPerformed

    private void logInlogOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInlogOutMenuItemActionPerformed
        setLogInPanel();
        if (logInStatus == LogInStatusEnum.LOGGED_IN) {
            setLogInStatus(LogInStatusEnum.LOGGED_OUT);
            activeUser = null;
        }
    }//GEN-LAST:event_logInlogOutMenuItemActionPerformed

    private void gameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameMenuItemActionPerformed
        if (logInStatus == LogInStatusEnum.LOGGED_IN) {
            GamePanel panel = new GamePanel()
                    .setGameService(new GameService())
                    .setActivePlayer(activeUser)
                    .initHangman();
            setMainPanel(panel);
        } else {
            OptionPaneHelpers.showErrorMessage(this, ErrorsEnum.NEED_AUTH);
        }
    }//GEN-LAST:event_gameMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new HomeFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenuItem gameMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem logInlogOutMenuItem;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu propertiesMenu;
    private javax.swing.JMenuItem scoreboardMenuItem;
    // End of variables declaration//GEN-END:variables

}
